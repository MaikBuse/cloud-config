apiVersion: apps/v1
kind: Deployment
metadata:
  name: "vectory-backend"
  namespace: "vectory"
  labels:
    app: "vectory-backend"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: "vectory-backend"
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: "vectory-backend"
    spec:
      imagePullSecrets:
        - name: "image-pull-secret"
      initContainers:
        - name: "vectory-migration"
          image: {{ .Values.migration.container.image | quote }}
          env:
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: postgres-pguser-vectory
                  key: host
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: postgres-pguser-vectory
                  key: port
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-pguser-vectory
                  key: user
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-pguser-vectory
                  key: password
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: postgres-pguser-vectory
                  key: dbname
            - name: GOOSE_DBSTRING
              value: >
                "host=$(DB_HOST) port=$(DB_PORT) user=$(DB_USER) password=$(DB_PASSWORD) dbname=$(DB_NAME) sslmode=prefer"
      containers:
        - name: "vectory-backend"
          image: {{ .Values.backend.container.image | quote }}
          envFrom:
            - secretRef:
                name: "vectory-backend-keycloak-secret"
          env:
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: postgres-pguser-vectory
                  key: host
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: postgres-pguser-vectory
                  key: port
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-pguser-vectory
                  key: user
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-pguser-vectory
                  key: password
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: postgres-pguser-vectory
                  key: dbname
          ports:
            - name: "go"
              containerPort: 3000
          livenessProbe:
            httpGet:
              path: "/health"
              port: 3000
            initialDelaySeconds: 20
            periodSeconds: 5
            timeoutSeconds: 5
          resources:
            requests:
              memory: "512Mi"
              cpu: "475m"
            limits:
              memory: "1024Mi"
